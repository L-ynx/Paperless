version: '3.8'

services:
  paperless-frontend:
    container_name: paperless-frontend
    platform: linux/amd64
    build:
      context: .
      dockerfile: PaperlessWebUI/Dockerfile
    image: paperless-frontend:nginx
    ports:
      - "8080:80"

  paperless-rest:
    container_name: paperless-rest-server
    platform: linux/amd64
    build:
      context: PaperlessREST
      dockerfile: Dockerfile
    image: paperless-rest-server:latest
    ports:
      - "8081:8081"
    depends_on:
      paperless-db:
        condition: service_started
      rabbitmq:
        condition: service_started
      minio:
        condition: service_started
      elastic_search:
        condition: service_healthy
    environment:
      MINIO_URL: http://minio:9000
      ELASTICSEARCH_HOST: elastic_search

  paperless-db:
    container_name: paperless-postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: paperlessdb  # The name of the database to be created
      POSTGRES_USER: admin      # The username for the database
      POSTGRES_PASSWORD: admin  # The password for the user
    volumes:
      - paperless-db-data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "9093:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
      - ./init/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./init/definitions.json:/etc/rabbitmq/definitions.json

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"     # MinIO Server
      - "9001:9001"     # MinIO Console

  ocrworker:
    container_name: paperless-ocrworker
    platform: linux/amd64
    build:
      context: PaperlessServices
      dockerfile: Dockerfile
    image: paperless-ocrworker:latest
    ports:
      - "8082:8082"
    environment:
      TESSERACT_PATH: /usr/share/tessdata
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      MINIO_URL: http://minio:9000
      ELASTICSEARCH_HOST: elastic_search
    depends_on:
      rabbitmq:
        condition: service_started
      minio:
        condition: service_started
      elastic_search:
        condition: service_healthy

  elastic_search:
    image: elasticsearch:8.7.1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      interval: 8s
      retries: 50
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.3
    ports:
      - 5601:5601


volumes:
  paperless-db-data:
  rabbitmq-data:
  rabbitmq-log:
  minio_data:
  elastic_search_data: